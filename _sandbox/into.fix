module Main;

// NOTE: This cannot be implemented. (compile error)

trait p: Into {
    type FromType p a;
    type ToType p a;
    into: FromType p a -> ToType p a;
}

impl I64: Into {
    type FromType I64 a  = I64;
    type ToType I64 a = I64;
    into = |x| x;
}

/*

type [f: * -> *, g: * -> *] FunctorPair f g = unbox struct {
    // NOTE: Structs cannot contain polymorphic functions as a field
    into: f a -> g a
};

impl [f: * -> *, g: * -> *] FunctorPair f g: Into {
    type FromType (FunctorPair f g) a = f a;
    type ToType (FunctorPair f g) a = g a;
    into = undefined("x");
}
*/

main: IO ();
main = (
    let i: I64 = 1;
    let i: I64 = i.into;
    pure()
);

    

