module Main;

main1: IO ();
main1 = (
    loop_m(
        0, |i|
        if i > 64 { break_m $ () };
        let u64 = -1.to_U64;
        let u64 = u64.shift_right(i.to_U64);
        println("(u64,i)="+(u64,i).to_string);;
        continue_m $ i + 1
    )
);

main2: IO ();
main2 = (
    loop_m(
        (), |_|
        eval debug_eprint("i=");
        let str = *read_line(stdin);
        let i: I64 = *from_string(str.strip_spaces).from_result;
        let u64 = -1.to_U64;
        let u64 = u64.shift_right(i.to_U64);
        println("(u64,i)="+(u64,i).to_string).lift;;
        continue_m $ ()
    )
).try(eprintln);

main: IO ();
main = (
    let shift: I64 = from_string("64").as_ok;
    let ans = -1.to_U64.shift_right(shift.to_U64);      // undefined behavior when shift >= 64
    println("(ans,shift)="+(ans,shift).to_string);;
    let shift: I64 = 64;
    let ans = -1.to_U64.shift_right(shift.to_U64);      // undefined behavior when shift >= 64
    println("(ans,shift)="+(ans,shift).to_string);;
    pure()
);
