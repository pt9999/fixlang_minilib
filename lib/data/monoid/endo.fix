module Minilib.Data.Monoid.Endo;

import Minilib.Trait.Monoid;

type Endo a = unbox struct {
    f: a -> a
};

endo: (a -> a) -> Endo a;
endo = |f| Endo { f: f };

appEndo: a -> Endo a -> a;
appEndo = |x, e| (e.@f)(x);

impl Endo a: Monoid {
    mempty = Endo { f: |x| x };
    mconcat = |b, a| Endo { f: a.@f << b.@f };
}
