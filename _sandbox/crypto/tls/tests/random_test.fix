module Main;

import Random;
import AsyncTask;

import Minilib.Monad.Random;
import Minilib.Monad.State;
import Minilib.Monad.Error;
import StringEx;
import UnitTest;

test_free_random: TestCase;
test_free_random = (
    make_test("test_free_random") $ |_|
    let ma = do {
        let a = *generate_random_bytes(4);
        let b = *generate_random_bytes(4);
        pure $ (a, b)
    };
    let free: FreeRandom (Array U8, Array U8) = ma;

    let var_random = *Var::make(Random::init_by_seed(123_U64)).lift;
    let ret = *free.interpret.eval_state_t(var_random);
    println(ret.to_string).lift
);

main: IO ();
main = (
    [
        test_free_random,
    ]
    .run_test_driver
);
