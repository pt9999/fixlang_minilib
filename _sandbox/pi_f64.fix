module Main;

import Math;

// Gaussâ€“Legendre algorithm
gauss_legendre: F64 -> F64 -> F64 -> F64 -> I64 -> F64;
gauss_legendre = |a, b, t, p, i| (
    if i < 0 {
        (a + b) * (a + b) / (4.0 * t)
    };
    let a1 = (a + b) / 2.0;
    let b1 = sqrt(a * b);
    let da = a - a1;
    let t1 = t - p * da * da;
    let p1 = 2.0 * p;
    gauss_legendre(a1, b1, t1, p1, i - 1)
);

calc_pi: () -> F64;
calc_pi = |_| (
    let a = 1.0;
    let b = sqrt(1.0 / 2.0);
    let t = 1.0 / 4.0;
    let p = 1.0;
    let max_loop = 30;
    gauss_legendre(a, b, t, p, max_loop)
);

main: IO ();
main = (
    let pi = calc_pi();
    println(pi.to_string_precision(16_U8))
);
