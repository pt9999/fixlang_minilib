module StringEx;

import Debug;
import HashMap;

impl (): ToString {
    to_string = |_| "()";
}

impl [a : ToString, b : ToString, c : ToString] (a, b, c) : ToString {
    to_string = |(l, m, r)| "(" + l.to_string + ", " + m.to_string + ", " + r.to_string + ")";
}

impl [a : ToString, b : ToString, c : ToString, d : ToString] (a, b, c, d) : ToString {
    to_string = |(l, m, m2, r)| "(" + l.to_string + ", " + m.to_string + ", " + m2.to_string + ", " + r.to_string + ")";
}

impl [k: ToString, v: ToString] HashMap k v : ToString {
    to_string = |h| (
        "{" + 
        h.to_iter.map(|(k,v)| k.to_string + ":" + v.to_string).join(",")
        + "}"
    );
}

impl [a: ToString] Array a: ToString {
    to_string = |a| (
        "[" + 
        a.to_iter.map(|x| x.to_string).join(",")
        + "]"
    );
}

_unsafe_to_string: Array U8 -> String;
_unsafe_to_string = |a| (
    String::_unsafe_from_c_str (a.push_back(0_U8))
);
    
get_byte: I64 -> String -> U8;
get_byte = |i, str| (
    str.get_bytes.@(i)
);
