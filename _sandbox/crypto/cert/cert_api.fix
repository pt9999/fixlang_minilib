// Public API that manages X.509 certificates.
module Minilib.Crypto.Cert.CertApi;

// A string that represents a point of time in "YYYYMMDDHHMMSSZ" format.
type CerTime = String;
// A digital signature.
type CerSignature = Array U8;
// A target message of a digital signature.
type CerSigMessage = Array U8;
// A name of a digital signature scheme, for example "rsa_pss_rsae_sha256", "ecdsa_secp256r1_sha256" etc.
type CerSigScheme = String;
// A DNS name of the target server.
type CerDnsName = String;

// Public API that manages X.509 certificates.
type CertApi = unbox struct {
    // Loads CA certificates from system-specific location.
    // For linux, the CA certificates is located at `/etc/ssl/certs` directory.
    load_ca_certificates: IOFail CertApi,
    // Gets the current time.
    get_now: IO CerTime,
    // Builds a certificate path from an array of certificates (an array of DER-encoded bytes)
    // and a collection of CA certificates.
    build_cert_path: Array (Array U8) -> Result ErrMsg CertPathApi,
};

// Public API that represents a certificate path.
type CertPathApi = unbox struct {
    get_certificates: () -> Array CertificateApi,
    validate_date: CerTime -> Result ErrMsg (),
    validate_certificate_signatures: () -> Result ErrMsg (),
};

// Public API that represents a X.509 certificate.
type CertificateApi = unbox struct {
    verify_signature_by_subject_public_key: CerSigMessage -> CerSigScheme -> CerSignature -> Result ErrMsg (),
    verify_certificate_identity: CerDnsName -> Result ErrMsg (),
};
