module Main;

import Minilib.Crypto.Cert.Pem;
import Minilib.Crypto.Cert.CACertificates;
import Minilib.Thread.Time;
import Minilib.Text.Hex;
import Minilib.Testing.UnitTest;

test_parse_pem_entries: TestCase;
test_parse_pem_entries = (
    make_test("test_parse_pem_entries") $ |_|
    //let path = Path::parse("/etc/ssl/certs/DigiCert_Global_Root_CA.pem").as_some;
    //let path = Path::parse("/etc/ssl/certs/ca-certificates.crt").as_some;
    let path = CACertificates::path;
    let contents = *read_file_string(path);
    let _ =*timeit("parse_pem_entries", |_|
        let res = parse_pem_entries(contents);
        res.map(get_size)
    ).lift;
    let entries = *parse_pem_entries(contents).from_result;
    //if true { pure() };
    /*
    entries.to_iter.fold_m(
        (), |_, entry|
        println("label=" + entry.@label + " bytes=" + entry.@bytes.to_string_hex).lift
    )
    */
    pure()
);

main: IO ();
main = (
    [
        test_parse_pem_entries,
    ]
    .run_test_driver
);
