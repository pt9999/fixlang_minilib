module Minilib.Trait.Semigroup;

// A trait that represents a [semigroup](https://en.wikipedia.org/wiki/Semigroup).
trait a: Semigroup {
    // `a.sappend(b)` appends `b` after `a`.
    sappend: a -> a -> a;
}

impl (): Semigroup {
    sappend = |b, a| ();
}

impl Array a: Semigroup {
    sappend = Array::append;
}

impl Iterator a: Semigroup {
    sappend = Iterator::append;
}

impl String: Semigroup {
    sappend = String::concat;
}

impl [a: Semigroup] Option a: Semigroup {
    sappend = |b, a| (
        if a.is_none { b };
        if b.is_none { a };
        some $ a.as_some.sappend(b.as_some)
    );
}

/*
impl HashSet k v: Semigroup {
    sappend = HashSet::merge;
}
*/
