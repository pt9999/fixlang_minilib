// Mock-up for TLSSession
module Minilib.Crypto.Tls.TLSSessionMock;

import Minilib.Crypto.Tls.TLSSocket;
import Minilib.Monad.State;
import Minilib.Monad.Error;

type TLSSessionInitParam = box struct {
    server_name: String,
    skip_cert_verify: Bool,
};

type TLSSession = unbox struct {
    dummy: ()
};

type StateTLSSession = StateT TLSSession IOFail;

namespace TLSSession {
    // Creates a TLSSession object.
    make: TLSSocket -> TLSSessionInitParam -> IOFail TLSSession;
    make = |socket, ts_init_param| (
        pure $ TLSSession {
            dummy: ()
        }
    );

    establish_handshake: StateTLSSession ();
    establish_handshake = (
        pure()
    );

    save_certificates_to_files: (I64 -> Path) -> StateTLSSession ();
    save_certificates_to_files = |make_filepath| (
        pure()
    );

    send_appdata: Array U8 -> StateTLSSession ();
    send_appdata = |appdata| (
        pure()
    );

    recv_appdata: StateTLSSession (Array U8);
    recv_appdata = (
        pure $ []
    );
}

