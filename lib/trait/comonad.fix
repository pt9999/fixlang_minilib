// Comonad.
//
// cf. Comonads in Haskell
// https://www.slideshare.net/davidoverton/comonad
module Minilib.Trait.Comonad;

trait [w : *->*] w : Comonad {
    extract : w a -> a;
    extend : (w b -> a) -> w b -> w a;
}

namespace Comonad {
    duplicate : [w : Comonad] w a -> w (w a);
    duplicate = Comonad::extend(|x|x);

    // Flipped version of `extend`.
    extendF : [w : Comonad] w b -> (w b -> a) -> w a;
    extendF = |wb, f| wb.extend(f);
}
