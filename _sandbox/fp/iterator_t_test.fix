module Main;

import Minilib.Monad.IteratorT;
import Minilib.Testing.UnitTest;

test_empty: TestCase;
test_empty = (
    make_test("test_empty") $ |_|
    let xs: IteratorT IOFail I64 = IteratorT::empty;
    assert_true("empty", *xs.is_empty)
);

test_push_front: TestCase;
test_push_front = (
    make_test("test_push_front") $ |_|
    let xs: IteratorT IOFail I64 = IteratorT::empty.push_front(42);
    let opt = *xs.advance;
    assert_true("is_some", opt.is_some);;
    let (x, xs2) = opt.as_some;
    assert_equal("x", 42, x);;
    assert_true("empty", *xs2.is_empty)
);

// TODO: add tests

main: IO ();
main = (
    [
        test_empty,
        test_push_front,
    ]
    .run_test_driver
);