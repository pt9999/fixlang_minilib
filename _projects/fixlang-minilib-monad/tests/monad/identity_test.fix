module IdentityTest;


import Minilib.Monad.Identity;
import Minilib.Testing.UnitTest;

test_identity_functor: TestCase;
test_identity_functor = (
    make_test("test_identity_functor") $ |_|
    let ma = Identity::make(2);
    let ma = ma.map(add(1));
    let ma = ma.map(to_string);
    assert_equal("eq", "3", ma.get)
);

test_identity_monad: TestCase;
test_identity_monad = (
    make_test("test_identity_monad") $ |_|
    let ma = Identity::make(2);
    let mc = do {
        let a = *ma;
        let b = *pure(a + 1);
        pure $ b.to_string
    };
    assert_equal("eq", "3", mc.get)
);

main: IO ();
main = (
    [
        test_identity_functor,
        test_identity_monad,
        TestCase::empty
    ]
    .run_test_driver
);


