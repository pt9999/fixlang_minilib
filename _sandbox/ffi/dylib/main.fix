module Main;

test1: IO ();
test1 = (
    pure();;
    let (a, b) = (1, 2);
    let c = *FFI_CALL_IO[I64 add_i64(I64, I64), a, b];
    println("c=" + c.to_string);;
    let (a, b) = (Box::make $ "a", Box::make $ "b");
    let a = FFI::boxed_to_retained_ptr(a);
    let b = FFI::boxed_to_retained_ptr(b);
    eval debug_println("test1: a=" + a.to_string + " b="+b.to_string);

    let c: Ptr = *FFI_CALL_IO[Ptr add_string(Ptr, Ptr), a, b];
    eval debug_println("test1: c=" + c.to_string);
    let c: Box String = FFI::boxed_from_retained_ptr(c);
    eval a;
    eval b;
    println("c=" + c.@value.to_string);;
    pure()
);

main: IO ();
main = test1;
