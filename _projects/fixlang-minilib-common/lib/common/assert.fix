// Assert functions.
module Minilib.Common.Assert;

// `assert_lazy(errmsg, value, lazy_func)` asserts that a condition (boolean value) is true.
// If the assertion failed, prints a message to the stderr and aborts the program.
// If the assertion succeeded, calls a lazy function.
// 
// For example, instead of 
// `eval *assert(|_| "error", a == b); ...` in an IO monad, you can write
// `assert_lazy(|_| "error", a == b) $ |_| ...`.
assert_lazy: Lazy String -> Bool -> Lazy a -> a;
assert_lazy = |errmsg, value, lazy_func| (
    if !value { undefined(errmsg()) };
    lazy_func()
);
