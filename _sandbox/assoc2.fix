module Main;

// 関連型の型パラメータには高階カインドも指定可能。
trait a: Trait {
  type [f: * -> *] Elem a f;
  method: [f: * -> *] Elem a f -> a -> a;
}

impl Array a: Trait {
  type Elem (Array a) f = f a;
  // ここでは実験のため、elem は特に使っていない。
  method = |elem, arr| arr;
}

main: IO ();
main = (
    let arr = [456];
    // Option I64 の例
    let arr = arr.method(some(33));
    // Result ErrMsg I64 の場合、単に `ok(33)` だけでは ErrMsg を型推論できないため、型アノテーションを付ける必要がある。
    let arr = arr.method(ok(33): Elem (Array I64) (Result ErrMsg));
    // Array I64 の例
    let arr = arr.method([33]);
    pure()
);
