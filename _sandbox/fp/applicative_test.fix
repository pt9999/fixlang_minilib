module Main;

import Minilib.Trait.Applicative;
import Minilib.Testing.UnitTest;

test_array: TestCase;
test_array = (
    make_test("test_array") $ |_|
    let add: I8 -> I32 -> I64 = |x,y| x.to_I64 + y.to_I64;
    let fs = [add(1_I8), add(2_I8)];
    let ys = [10_I32, 20_I32];
    let zs: Array I64 = app_a(fs, ys);
    let _ = *println(zs.map(to_string).to_iter.join(",")).lift;
    let xs = [1_I8, 2_I8];
    let zs: Array I64 = lift_a2(add, xs, ys);
    let _ = *println(zs.map(to_string).to_iter.join(",")).lift;
    pure()
);

test_iter: TestCase;
test_iter = (
    make_test("test_iter") $ |_|
    let add: I8 -> I32 -> I64 = |x,y| x.to_I64 + y.to_I64;
    let fs = [add(1_I8), add(2_I8)].to_iter;
    let ys = [10_I32, 20_I32].to_iter;
    let zs: Iterator I64 = app_a(fs, ys);
    let _ = *println(zs.map(to_string).join(",")).lift;
    let xs = [1_I8, 2_I8].to_iter;
    let zs: Iterator I64 = lift_a2(add, xs, ys);
    let _ = *println(zs.map(to_string).join(",")).lift;
    pure()
);

main: IO ();
main = (
    [
        test_array,
        test_iter,
    ]
    .run_test_driver
);
