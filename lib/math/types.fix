// Type definitions for mathematical concepts.
module Minilib.Math.Types;

// [Monoid](https://en.wikipedia.org/wiki/Monoid)
trait Monoid = Zero + Add;

// [Additive group](https://en.wikipedia.org/wiki/Additive_group)
trait AdditiveGroup = Eq + Zero + Neg + Add + Sub;

// [Ring](https://en.wikipedia.org/wiki/Ring_(mathematics))
trait Ring = AdditiveGroup + Mul;

// [Field](https://en.wikipedia.org/wiki/Field_(mathematics))
trait Field = Ring + Div;

// [Total order](https://en.wikipedia.org/wiki/Total_order)
trait Ordered = Eq + LessThan + LessThanOrEq;

// [Ordered field](https://en.wikipedia.org/wiki/Ordered_field)
trait OrderedField = Field + LessThan + LessThanOrEq;


