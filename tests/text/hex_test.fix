module Main;

import Debug;

import Minilib.Text.Hex;
import Minilib.Testing.UnitTest;

test_to_string_hex: TestCase;
test_to_string_hex = (
    make_table_test("test_to_string_hex",
        [
            (42_U8.to_string_hex, "2a"),
            (0x0123_U16.to_string_hex, "0123"),
            (3735928559_U32.to_string_hex, "deadbeef"),
            (18446744073709551615_U64.to_string_hex, "ffffffffffffffff")
        ],
        |(actual, expected)|
        assert_equal("eq", expected, actual)
    )
);

test_from_string_hex: TestCase;
test_from_string_hex = (
    make_table_test("test_from_string_hex",
        [
            ("0", ok $ 0_U64),
            ("2a", ok $ 42_U64),
            ("DeadBeef", ok $ 3735928559_U64),
            ("FFFFFFFFFFFFFFFF", ok $ 18446744073709551615_U64),
            ("Dead.beef", err $ "Not a hexadecimal character: '.'"),
            ("", err $ "Empty string")
        ],
        |(str, expected)|
        let actual: Result ErrMsg U64 = from_string_hex (str);
        assert_equal("res", expected, actual)
    )
);

main: IO ();
main = (
    [
        test_to_string_hex,
        test_from_string_hex,
        TestCase::empty
    ]
    .run_test_driver
);
