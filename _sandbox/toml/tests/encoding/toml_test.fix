module Main;


test1: IOFail ();
test1 = (
    let contents = *read_file_string("test.toml");
    let toml = *Toml::parse(contents).from_result;
    let toml = toml.upsert_table("build", upsert_key("files",
        files.to_iter.map(|f| "\"" + f + "\"").join(",\n")
    ));
    let contents2 = toml.to_string;
    pure()
);

test2: IOFail ();
test2 = (
    let toml = Toml::empty;
    let toml = toml.add_comment("this is comment");
    let toml = toml.add_table("general",
        TomlTable::empty
        .add_string_value("name", "test")
        .add_string_value("version", "0.0.0")
    );
    let toml = toml.add_table("build",
        TomlTable::empty
        .add_string_array_value("files", ["a", "b"])
        .add_string_array_value("static_links", [])
    );
    let toml = toml.add_table_array(
        TomlTable::make("dependencies")
        .add_string_value("name", "certain-project")
        .add_inline_table("git",
            TomlTable::empty
            .add_string_value("url", "https://github.com/foo/bar")
        )
    );
    pure()
);

test3: IOFail ();
test3 = (
    let toml = Toml::empty;
    let toml = toml.add_comment("this is comment");
    let toml = toml.add_table("general",
        [
            toml_keyval("name", toml_string("test")),
            toml_keyval("version", toml_string("0.0.0")),
            toml_newline
        ]
    );
    let toml = toml.add_table("build",
        TomlTable::empty
        .add_string_array_value("files", ["a", "b"])
        .add_string_array_value("static_links", [])
    );
    let toml = toml.add_table_array(
        TomlTable::make("dependencies")
        .add_string_value("name", "certain-project")
        .add_inline_table("git",
            TomlTable::empty
            .add_string_value("url", "https://github.com/foo/bar")
        )
    );
    pure()
);

test4: IOFail ();
test4 = (
    let toml_reader = TomlReader::empty;
    let toml_writer = TomlWriter::empty;

    pure()
);

main: IO ();
main = (
    do {
        test1;;
        test2;;
        test3;;
        test4;;
        pure()
    }
    .try(eprintln)
);