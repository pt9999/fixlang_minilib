module Main;

import Minilib.Monad.PipeT;
import Minilib.Monad.IteratorT;
/*
import Minilib.Monad.State;
import Minilib.Monad.IO;
import Minilib.Monad.Error;
import Minilib.Monad.Trans;
import Minilib.Trait.Traversable;
*/
import Minilib.Testing.UnitTest;

test_from_iter_to_iter_t: TestCase;
test_from_iter_to_iter_t = (
    make_test("test_from_iter_to_iter_t") $ |_|
    let pipe: PipeT Void I64 IOFail () = PipeT::from_iter $ Iterator::range(0, 3);
    let arr: Array I64 = *pipe.to_iter_t.to_array_m;
    assert_equal("eq", [0, 1, 2], arr)
);

// TODO: add tests

main: IO ();
main = (
    [
        test_from_iter_to_iter_t,
    ]
    .run_test_driver
);
