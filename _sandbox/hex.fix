module Main;

to_string_hex: U64 -> String;
to_string_hex = |x| (
    loop(
        ("", 0, x), |(str, i, x)|
        if i >= 16 || x == 0_U64 {
            break $ if str.is_empty { "0" } else { str }
        };
        let h = x.bit_and(15_U64).to_I64;
        let x = x.shift_right(4_U64);
        let str = "0123456789ABCDEF".get_sub(h,h + 1) + str;
        continue $ (str, i + 1, x)
    )
);

main: IO ();
main = (
    let _ = *println (38616_U16.to_U64.to_string_hex); // 0x96D8
    let _ = *println (10605_U16.to_U64.to_string_hex); // 0x296D
    let _ = *println (-5779.to_U16.to_U64.to_string_hex); // 0xE96D
    let _ = *println (-1.to_U64.to_string_hex);
    pure()
);