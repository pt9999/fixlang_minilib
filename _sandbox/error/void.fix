module Main;

type Void a = box union {   // struct と書くべきところ、union にしている
    data: a -> a
};

namespace Void {
    empty: Void a;
    empty = Void { data: |x| x };
}

impl Void: Functor {
    map = |f, ma| Void::empty;
}

impl Void: Monad {
    pure = |_| Void::empty;
    bind = |f, ma| Void::empty;
}

impl Void a: ToString {
    to_string = |_| "void";
}

main: IO ();
main = (
    let v: Void String = do {
        let a = *pure(1);
        let b = a.to_string;
        pure(b)
    };
    println(v.to_string)
);
