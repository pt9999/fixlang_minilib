// Definition of `MonadErrorIF` trait which can report errors.
module Minilib.Monad.Error;

// A trait for the interface of monads which can report errors.
trait MonadError = Monad + MonadErrorIF;

// A trait for monads which can report errors.
trait [m: * -> *] m: MonadErrorIF {
    // `error(e)` throws an error.
    error: ErrMsg -> m a;

    // `ma.catch(handler)` catches any error that is thrown during the computation of `ma`.
    catch: (ErrMsg -> m a) -> m a -> m a;
}

impl Result ErrMsg: MonadErrorIF {
    error = Result::err;
    catch = |handler, res| (
        if res.is_err { handler(res.as_err) };
        res
    );
}

impl IOFail: MonadErrorIF {
    error = IOFail::throw;
    catch = |handler, iof| (
        let res = *iof.to_result.lift;
        if res.is_err { handler(res.as_err) };
        res.from_result
    );
}

