// Identity monad
module Minilib.Monad.Identity;

// Identity monad
type Identity a = unbox struct {
    data: a
};

// Creates an identity monad from a value.
make: a -> Identity a;
make = |a| Identity { data: a };

// Gets a value from an identity monad.
get: Identity a -> a;
get = @data;

impl Identity: Functor {
    map = |f, ia| Identity::make(f(ia.get));
}

impl Identity: Monad {
    pure = Identity::make;
    bind = |f, ia| f(ia.get);
}
