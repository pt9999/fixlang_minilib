package Main;

import Sandbox.StateMonad;

liftState: (s -> t) -> (t -> s -> s) -> State t a -> State s a;
liftState: |getter, setter, state| (
    make_state_monad $ |s|
    let t = getter(s);
    let (a, t) = state.run_state(t);
    let s = s.setter(t);
    (a, s)
);

liftState2: ((t -> t) -> s -> s) -> State t a -> State s a;
liftState2: |modifier, state| (
    make_state_monad $ |s|
    let s = s.modifier(|t|
        let (a, t) = state.run_state(t);
        t
    );
    (a, s)
);

lift1: ((t -> t) -> s -> s) -> (t -> (a, t)) -> s -> (a, s));


