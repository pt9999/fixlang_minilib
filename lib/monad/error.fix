module Minilib.Monad.Error;

import Minilib.Monad.Trans;

trait MonadError = Monad + MonadErrorIF;

trait [m: * -> *] m: MonadErrorIF {
    type ErrorType m;
    error: ErrorType m -> m a;
}

impl Result e: MonadErrorIF {
    type ErrorType (Result e) = e;
    error = Result::err;
}

impl IOFail: MonadErrorIF {
    type ErrorType IOFail = ErrMsg;
    error = IOFail::throw;
}

impl [t: MonadTrans, m: MonadErrorIF] t m: MonadErrorIF {
    type ErrorType (t m) = ErrorType m;
    error = lift_t << error;
}

