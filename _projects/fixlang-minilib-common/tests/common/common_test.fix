module CommonTest;

import Minilib.Common.Common;
import Minilib.Testing.UnitTest;

test_id: TestCase;
test_id = (
    make_test("test_id") $ |_|
    eval *assert_equal("eq", 1, id(1));
    eval *assert_equal("eq", "a", id("a"));
    pure()
);

test_flip: TestCase;
test_flip = (
    make_test("test_flip") $ |_|
    let pair = |a, b| (a, b);
    eval *assert_equal("eq", (1, 2), pair(1, 2));
    eval *assert_equal("eq", (2, 1), (pair.flip)(1, 2));
    pure()
);

test_apply: TestCase;
test_apply = (
    make_test("test_apply") $ |_|
    eval *assert_equal("eq", "1", 1.apply $ to_string);
    eval *assert_equal("eq", "2", 1.apply $ |i| (i+1).to_string);
    pure()
);

test_assert_lazy: TestCase;
test_assert_lazy = (
    make_test("test_assert_lazy") $ |_|
    assert_lazy(|_| "err", 1 == 1) $ |_|
    pure()
);

main: IO ();
main = (
    [
        test_id,
        test_flip,
        test_apply,
        test_assert_lazy,
    ]
    .run_test_driver
);

