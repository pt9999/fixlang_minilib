// TreeSet は c++ の std::set に比べて10倍ぐらい遅い
module Main;

import Minilib.Common.TimeEx;
import Minilib.Collection.TreeSet;
import Random;

test_treeset: IO ();
test_treeset = (
    let n = 200000;
    let mod = 100000_U64;
    let rng = Random::init_by_seed(123_U64);
    let ((rng, a), time) = *consumed_realtime_while_io(do {
        pure();;
        pure $ range(0, 2*n).fold(
            (rng, []), |i, (rng, a)|
            rng.generate_U64.map(|r| a.push_back(r %mod))
        )
    });
    println("generate random data: " + time.to_string_precision(3_U8) + " sec");;
    let ts: TreeSet U64 = TreeSet::make();
    let (ts, time) = *consumed_realtime_while_io(do {
        pure();;
        let ts = range(0,n).fold(
            ts, |i, ts|
            let r = a.@(2*i);
            //eval debug_eprintln("insert " + r.to_string);
            let ts = ts.insert(r);
            ts
        );
        pure $ ts
    });
    println("TreeSet insertion: " + time.to_string_precision(3_U8) + " sec");;
    println("ts.size=" + ts.get_size.to_string);;
    let (ts, time) = *consumed_realtime_while_io(do {
        pure();;
        let ts = range(0,n).fold(
            ts, |i, ts|
            let r = a.@(2*i + 1);
            //eval debug_eprintln("erase " + r.to_string);
            let ts = ts.erase(r);
            ts
        );
        pure $ ts
    });
    println("TreeSet deletion: " + time.to_string_precision(3_U8) + " sec");;
    println("ts.size=" + ts.get_size.to_string)
);

main: IO ();
main = (
    test_treeset
);