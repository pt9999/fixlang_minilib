module Main;

import Minilib.Crypto.MD5;
import Minilib.Text.StringEx;

bytes_to_string_hex: Array U8 -> String;
bytes_to_string_hex = |u8array| (
    u8array.to_iter.fold(
        [], |output, u8|
        output.push_back(u8.shift_right(4_U8).bit_and(15_U8).encode_hex_char)
              .push_back(u8.shift_right(0_U8).bit_and(15_U8).encode_hex_char)
    ).push_back(0_U8)._unsafe_from_c_str.to_lower
);

main: IO ();
main = (
    do {
        //let bytes = "".get_bytes.pop_back;
        let bytes = *read_bytes(IO::stdin);
        let d = MD5::digest(bytes).bytes_to_string_hex;
        println(d).lift
    }
    .try(eprintln)
);
