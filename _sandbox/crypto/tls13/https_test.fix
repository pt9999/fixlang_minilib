module Main;

//import AsyncTask;
import Debug;

import Minilib.Crypto.Tls13.Handshake;
import Minilib.Crypto.Tls13.TLSSession;
import Minilib.Net.Tcp;
import Minilib.Monad.State;
/*
import Minilib.Crypto.Tls13.Types;
import Minilib.Crypto.Tls13.Connection;
import Minilib.Crypto.Tls13.RandGen;
import Minilib.Crypto.SecureRandom;
import Minilib.Encoding.Binary;
import Minilib.Text.Hex;
import Minilib.Text.StringEx;
*/

https_fetch: () -> IOFail ();
https_fetch = |_| (
    let host_port = "localhost:443";
    let path = "/";
    let socket: Socket = *connect_to_tcp_server(host_port);
    let session: TLSSession = *TLSSession::make(socket);
    let sm: TLSSessionState () = do {
        eval *send_client_hello;
        eval *recv_server_hello;
        pure()
    };
    sm.run_state_t(session).map(@0)
);

main: IO ();
main = do {
    https_fetch()
}.try(eprintln);
