module Main;

import AsyncTask;
import Random;
import Debug;

//import Minilib.Crypto.Tls13.ECDHE;
import Minilib.Crypto.Tls13.Types;
import Minilib.Crypto.Tls13.HandshakeState;
import Minilib.Encoding.Binary;
import Minilib.Monad.State;
import Minilib.Text.Hex;
//import Minilib.Thread.Time;
import Minilib.Testing.UnitTest;

test_client_hello: TestCase;
test_client_hello = (
    make_test("test_client_hello") $ |_|
    let random = Random::init_by_seed(123_U64);
    let var_random = *Var::make(random).lift;
    let (hstate, _) = *do {
        let hstate = *HandshakeState::make;
        hstate.start_handshake("localhost")
    }.run_state_t(var_random);
    eval *println(hstate.to_string).lift;
    pure()
);

main: IO ();
main = (
    [
        test_client_hello,
    ]
    .run_test_driver
);
