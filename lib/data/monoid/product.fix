module Minilib.Data.Monoid.Product;

import Minilib.Trait.Monoid;
import Minilib.Math.Types;

type Product a = unbox struct {
    data: a
};

to_product: a -> Product a;
to_product = |a| Product { data: a };

get_product: Product a -> a;
get_product = @data;

impl [a: Mul, a: One] Product a: Monoid {
    mempty = one;
    mappend = |b, a| a * b;
}
