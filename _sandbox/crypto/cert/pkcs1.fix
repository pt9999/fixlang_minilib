// RFC 8017 - PKCS #1: RSA Cryptography Specifications Version 2.2
module Minilib.Crypto.Cert.Pkcs1;

import Debug;

import Minilib.Encoding.Binary;
import Minilib.Math.Modular;
import Minilib.Math.BigInt;
import Minilib.Math.BigNat;

// 4. Data Conversion Primitives

// I2OSP - Integer-to-Octet-String primitive
// x: nonnegative integer to be converted
// xlen: intended length of the resulting octet string
i2osp: BigInt -> I64 -> Result ErrMsg (Array U8);
i2osp = |x, xlen| (
    if x.is_negative {
        err $ "integer is negative"
    };
    if x >= one.shift_left(xlen * 8) {
        err $ "integer too large"
    };
    let nat = x.@nat._remove_trailing_zeros;
    let u32_len = nat.get_size;
    let u8_len = xlen;
    let bytes = Array::fill(u8_len, 0_U8);
    let bytes = Iterator::range(0, u32_len).fold(
        bytes, |bytes, i|
        bytes.set_u32_be(u8_len - (i + 1) * 4, nat.@(i))    // big endian
    );
    ok $ bytes
);

// OS2IP - Octet-String-to-Integer primitive
os2ip: Array U8 -> BigInt;
os2ip = |bytes| (

);