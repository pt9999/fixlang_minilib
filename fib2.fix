// ファイル出力の実験

// モジュール宣言
module Main;

// 型宣言
calc_fib : I64 -> Array I64;
// グローバル変数定義
calc_fib = |n| (
    let arr = Array::fill(n, 0);
    let arr = arr.set!(0, 1);
    let arr = arr.set!(1, 1);
    let arr = loop((2, arr), |(idx, arr)|
        if idx == arr.get_size {
            break $ arr
        } else {
            let x = arr.@(idx-1);
            let y = arr.@(idx-2);
            let arr = arr.set!(idx, x+y);
            continue $ (idx+1, arr)
        }
    );
    arr
);

write_number: I64 -> IOHandle  -> IOFail ();
write_number = |number, handle| (
    if number > 3 {
        // わざとエラーを起こしてみる
        IOFail::from_result (err("too much number: " + number.to_string))
    };
    write_string (handle, number.to_string + "\n")
);

write_numbers: I64 -> IOHandle  -> IOFail ();
write_numbers = |count, handle| (
    loop_m (0, |index| 
        if index >= count {
            break_m $ ()
        };
        let _ = *write_number(index, handle);
        continue_m $ (index + 1)
    )
);

// 型宣言
main : IO ();
// グローバル変数定義
main = (
    do {
        let path = Path::parse("a.txt").as_some;
        with_file (path, "w", write_numbers(10))
    }.try(exit_with_msg(1))
);

