module Minilib.Thread.Counter;
//module Main;

import AsyncTask;

type Counter = unbox struct {
    data: Var I64
};

namespace Counter {
    make: I64 -> IO Counter;
    make = |i64| pure $ Counter {
        data: *Var::make(i64)
    };

    get: Counter -> IO I64;
    get = |ctr| (
        ctr.@data.get
    );

    inc: Counter -> IO I64;
    inc = |ctr| (
        ctr.@data.lock(|i64|
            ctr.@data.Var::set(i64 + 1);;
            pure $ i64
        )
    );
}

/*
main: IO ();
main = (
    let ctr = *Counter::make(0);
    println((*ctr.inc).to_string);;
    println((*ctr.inc).to_string);;
    println((*ctr.inc).to_string);;
    pure() 
);
*/

