// AES-GCM
// NIST Special Publication 800-38D
// Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC
// https://doi.org/10.6028/NIST.SP.800-38D

5 Elements of GCM
5.1 Block Cipher
... AES
... key: K,  key size: at least 128 bits
... block size: 128 bits
... forward cipher function CIPH_{K} ... permutation on bit strings (blocks)
... inverse cipher function ... GCM does not employ

5.2 Two GCM Functions
- authenticated encryption
   confidential data ... encrypted
   non-confidential data ... not encrypted
   computes authentication tag for both conf and non-conf data
- authenticated decryption
   confidential data ... decrypted
   non-confidential data    
   contingent on verification of tag
- if only non-conf data, it is called GMAC.
   auth enc ... generates auth tag
   auth dec ... verifies auth tag
 - algorithm is for Section 7

5.2.1.1 Input Data
- P: a plain text ... protected
- A: additional authenticated data (AAD) ... protected
     eg. ip address, ports, seqnum, protocol ver.
- IV: an initialization vector
     a nonce, requires uniqueness. see Section 8.2
     typically 96 bits = 12 bytes
requirements:
  len(P) <= 2**39 - 256
  len(A) <= 2**64 - 1
  1 <= len(IV) <= 2**64 - 1

5.2.1.2 Output Data
- C: ciphertext
- T: tag, authentication tag
     len(T) is 128, 120, 112, 104, 96  see Appendix B

5.2.2 Authenticated Decryption Function
  (IV, A, C, T) -> Either P Fail
  if T is correct tag, then P is returned. otherwise, Fail is returned.

5.3 Primitives for Confidentiality and Authentication
  Counter mode, inc_32
  first counter block for plaintext enc is generated by
  incrementing a block gen. from IV.
  The auth mechanism for GCM is GHASH function
    multiplication of the hash subkey H within binary Galois field
    H = apply(block cipher, zero block)
    GHASH_{H} is used for compress AAD and ciphertext into a single block
    and enc to auth tag
    H shall be secret

6. Mathematical components of GCM
   6.1 .. bit string operation
   6.2 .. inc function
   6.3 .. mult block
   6.4 .. GHASH func
   6.5 .. GCTR func

6.1 Basic operation
   ceil(x) ... x:real
   0^s     ... s `0` bits, eg. 0^8 = 00000000
   x||y    ... concats x and y, eg. 010 || 110 = 010110
   x xor y ... bitwise XOR




