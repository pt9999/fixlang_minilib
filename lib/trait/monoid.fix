module Minilib.Trait.Monoid;

// A trait that represents a [monoid](https://en.wikipedia.org/wiki/Monoid).
trait a: Monoid {
    // An empty instance.
    mempty: a;
    // `a.mconcat(b)` concats `b` after `a`.
    mconcat: a -> a -> a;
};

impl Array a: Monoid {
    mempty = [];
    mconcat = Array::append;
}

impl Iterator a: Monoid {
    mempty = Iterator::empty;
    mconcat = Iterator::concat;
}

impl String a: Monoid {
    mempty = "";
    mconcat = String::concat;
}

/*
impl HashSet k v: Monoid {
    mempty = HashSet::empty(0);
    mconcat = HashSet::merge;
}
*/
