module Minilib.Crypto.Tls13.RandGen;

import Debug;
import Minilib.Crypto.SecureRandom;
import Minilib.Monad.State;
import Minilib.Monad.Trans;

trait RandGen = Functor + Monad + RandGenIF;

trait [m: * -> *] m: RandGenIF {
    randgen_bytes: I64 -> m (Array U8);
}

impl StateT SecureRandom IOFail: RandGenIF {
    randgen_bytes = |size| (
        let secure_random = *get_state;
        let (random, secure_random) = *secure_random.generate_bytes(size).lift_t;
        eval *put_state(secure_random);
        pure $ random
    );
}
